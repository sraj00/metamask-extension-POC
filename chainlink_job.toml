type = "directrequest"
schemaVersion = 1
name = "Get > Bytes"
externalJobID = "cd428539-aec3-4449-a38c-bc45d9a52005"
forwardingAllowed = false
maxTaskDuration = "0s"
contractAddress = "0xeE1A1AF4e004AEC46cbF329015634E7A982E405e"
minContractPaymentLinkJuels = "0"
observationSource = """
    decode_log   [type="ethabidecodelog"
                  abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                  data="$(jobRun.logData)"
                  topics="$(jobRun.logTopics)"]

    decode_cbor  [type="cborparse" data="$(decode_log.data)"]
    fetch        [type="http" method=GET url="$(decode_cbor.get)" allowUnrestrictedNetworkAccess="true"]
    parse        [type="jsonparse" data="$(fetch)"]
    external_adapter [type="http" method=POST url="http://host.docker.internal:3000/" requestData="$(parse)" allowUnrestrictedNetworkAccess="true"]
    parse_final        [type="jsonparse" path="data" data="$(external_adapter)"]
    encode_large [type="ethabiencode"
                  abi="(bytes32 requestId, string value)"
                  data="{\\"requestId\\": $(decode_log.requestId), \\"value\\": $(parse_final)}"
                  ]
    encode_tx  [type="ethabiencode"
                abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\":   $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_large)}"
                ]

    submit_tx    [type="ethtx" to="0xeE1A1AF4e004AEC46cbF329015634E7A982E405e" data="$(encode_tx)"]

    decode_log -> decode_cbor -> fetch -> external_adapter -> encode_large -> encode_tx -> submit_tx
"""
